/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.93.0
  Forc version: 0.62.0
  Fuel-Core version: 0.31.0
*/

import type {
  BigNumberish,
  BN,
  Bytes,
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
  StrSlice,
} from 'fuels';

import type { Vec } from "./common";

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type LimitOrderInput = { maker_token: string, taker_token: string, maker_amount: BigNumberish, taker_amount: BigNumberish, maker: AddressInput, taker: AddressInput, nonce: BigNumberish, expriy: BigNumberish, traits: string };
export type LimitOrderOutput = { maker_token: string, taker_token: string, maker_amount: BN, taker_amount: BN, maker: AddressOutput, taker: AddressOutput, nonce: BN, expriy: BN, traits: string };

export interface OrdersAbiInterface extends Interface {
  functions: {
    generate_msg_hash: FunctionFragment;
    get_count: FunctionFragment;
    get_order_hash: FunctionFragment;
    increment_counter: FunctionFragment;
    pack_order: FunctionFragment;
    recover_signer: FunctionFragment;
    register_filling: FunctionFragment;
    verify_settlement: FunctionFragment;
  };
}

export class OrdersAbi extends Contract {
  interface: OrdersAbiInterface;
  functions: {
    generate_msg_hash: InvokeFunction<[txt: StrSlice, account: AddressInput], string>;
    get_count: InvokeFunction<[], BN>;
    get_order_hash: InvokeFunction<[order: LimitOrderInput], string>;
    increment_counter: InvokeFunction<[amount: BigNumberish], BN>;
    pack_order: InvokeFunction<[order: LimitOrderInput], Bytes>;
    recover_signer: InvokeFunction<[signature: string, msg_hash: string], AddressOutput>;
    register_filling: InvokeFunction<[order_hashes: Vec<string>], void>;
    verify_settlement: InvokeFunction<[order_hashes: Vec<string>], void>;
  };
}
