/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.93.0
  Forc version: 0.62.0
  Fuel-Core version: 0.31.0
*/

import type {
  BigNumberish,
  BN,
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
} from 'fuels';

import type { Enum } from "./common";

export enum ErrorInput { OrderNotDefined = 'OrderNotDefined', OrderReenter = 'OrderReenter', TryToFillMoreThanRequired = 'TryToFillMoreThanRequired', SentAssetIdDoesNotMatchMakerToken = 'SentAssetIdDoesNotMatchMakerToken', SentAssetAmountDoesNotMatchFillAmount = 'SentAssetAmountDoesNotMatchFillAmount', InsufficientTakerTokensReceivedFromCallback = 'InsufficientTakerTokensReceivedFromCallback', OnlySettlementCanInteract = 'OnlySettlementCanInteract', AlreadyIntitialized = 'AlreadyIntitialized', MakerHasNotEnoughFunds = 'MakerHasNotEnoughFunds' };
export enum ErrorOutput { OrderNotDefined = 'OrderNotDefined', OrderReenter = 'OrderReenter', TryToFillMoreThanRequired = 'TryToFillMoreThanRequired', SentAssetIdDoesNotMatchMakerToken = 'SentAssetIdDoesNotMatchMakerToken', SentAssetAmountDoesNotMatchFillAmount = 'SentAssetAmountDoesNotMatchFillAmount', InsufficientTakerTokensReceivedFromCallback = 'InsufficientTakerTokensReceivedFromCallback', OnlySettlementCanInteract = 'OnlySettlementCanInteract', AlreadyIntitialized = 'AlreadyIntitialized', MakerHasNotEnoughFunds = 'MakerHasNotEnoughFunds' };

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type LimitOrderInput = { maker_token: string, taker_token: string, maker_amount: BigNumberish, taker_amount: BigNumberish, maker: AddressInput, taker: AddressInput, nonce: BigNumberish, expriy: BigNumberish };
export type LimitOrderOutput = { maker_token: string, taker_token: string, maker_amount: BN, taker_amount: BN, maker: AddressOutput, taker: AddressOutput, nonce: BN, expriy: BN };

export interface OrderRegistryAbiInterface extends Interface {
  functions: {
    cancel_order: FunctionFragment;
    create_order: FunctionFragment;
    get_order: FunctionFragment;
    initialize: FunctionFragment;
    pull_maker_funds: FunctionFragment;
  };
}

export class OrderRegistryAbi extends Contract {
  interface: OrderRegistryAbiInterface;
  functions: {
    cancel_order: InvokeFunction<[hash: string], string>;
    create_order: InvokeFunction<[expriy: BigNumberish, taker_amount: BigNumberish, taker_asset: string, taker: AddressInput], string>;
    get_order: InvokeFunction<[hash: string], LimitOrderOutput>;
    initialize: InvokeFunction<[settlement: AddressInput], void>;
    pull_maker_funds: InvokeFunction<[maker: AddressInput, maker_asset: string, maker_amount: BigNumberish, receiver: AddressInput], void>;
  };
}
